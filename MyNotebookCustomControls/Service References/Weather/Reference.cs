//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace MyNotebookCustomControls.Weather {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://WebXml.com.cn/", ConfigurationName="Weather.WeatherWSSoap")]
    public interface WeatherWSSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://WebXml.com.cn/getRegionDataset", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BegingetRegionDataset(System.AsyncCallback callback, object asyncState);
        
        MyNotebookCustomControls.Weather.ArrayOfXElement EndgetRegionDataset(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://WebXml.com.cn/getRegionProvince", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BegingetRegionProvince(System.AsyncCallback callback, object asyncState);
        
        string[] EndgetRegionProvince(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://WebXml.com.cn/getRegionCountry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BegingetRegionCountry(System.AsyncCallback callback, object asyncState);
        
        string[] EndgetRegionCountry(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://WebXml.com.cn/getSupportCityDataset", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BegingetSupportCityDataset(string theRegionCode, System.AsyncCallback callback, object asyncState);
        
        MyNotebookCustomControls.Weather.ArrayOfXElement EndgetSupportCityDataset(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://WebXml.com.cn/getSupportCityString", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BegingetSupportCityString(string theRegionCode, System.AsyncCallback callback, object asyncState);
        
        string[] EndgetSupportCityString(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://WebXml.com.cn/getWeather", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BegingetWeather(string theCityCode, string theUserID, System.AsyncCallback callback, object asyncState);
        
        string[] EndgetWeather(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WeatherWSSoapChannel : MyNotebookCustomControls.Weather.WeatherWSSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getRegionDatasetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getRegionDatasetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyNotebookCustomControls.Weather.ArrayOfXElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyNotebookCustomControls.Weather.ArrayOfXElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getRegionProvinceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getRegionProvinceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getRegionCountryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getRegionCountryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getSupportCityDatasetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getSupportCityDatasetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyNotebookCustomControls.Weather.ArrayOfXElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyNotebookCustomControls.Weather.ArrayOfXElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getSupportCityStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getSupportCityStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getWeatherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getWeatherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WeatherWSSoapClient : System.ServiceModel.ClientBase<MyNotebookCustomControls.Weather.WeatherWSSoap>, MyNotebookCustomControls.Weather.WeatherWSSoap {
        
        private BeginOperationDelegate onBegingetRegionDatasetDelegate;
        
        private EndOperationDelegate onEndgetRegionDatasetDelegate;
        
        private System.Threading.SendOrPostCallback ongetRegionDatasetCompletedDelegate;
        
        private BeginOperationDelegate onBegingetRegionProvinceDelegate;
        
        private EndOperationDelegate onEndgetRegionProvinceDelegate;
        
        private System.Threading.SendOrPostCallback ongetRegionProvinceCompletedDelegate;
        
        private BeginOperationDelegate onBegingetRegionCountryDelegate;
        
        private EndOperationDelegate onEndgetRegionCountryDelegate;
        
        private System.Threading.SendOrPostCallback ongetRegionCountryCompletedDelegate;
        
        private BeginOperationDelegate onBegingetSupportCityDatasetDelegate;
        
        private EndOperationDelegate onEndgetSupportCityDatasetDelegate;
        
        private System.Threading.SendOrPostCallback ongetSupportCityDatasetCompletedDelegate;
        
        private BeginOperationDelegate onBegingetSupportCityStringDelegate;
        
        private EndOperationDelegate onEndgetSupportCityStringDelegate;
        
        private System.Threading.SendOrPostCallback ongetSupportCityStringCompletedDelegate;
        
        private BeginOperationDelegate onBegingetWeatherDelegate;
        
        private EndOperationDelegate onEndgetWeatherDelegate;
        
        private System.Threading.SendOrPostCallback ongetWeatherCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public WeatherWSSoapClient() {
        }
        
        public WeatherWSSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WeatherWSSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WeatherWSSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WeatherWSSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<getRegionDatasetCompletedEventArgs> getRegionDatasetCompleted;
        
        public event System.EventHandler<getRegionProvinceCompletedEventArgs> getRegionProvinceCompleted;
        
        public event System.EventHandler<getRegionCountryCompletedEventArgs> getRegionCountryCompleted;
        
        public event System.EventHandler<getSupportCityDatasetCompletedEventArgs> getSupportCityDatasetCompleted;
        
        public event System.EventHandler<getSupportCityStringCompletedEventArgs> getSupportCityStringCompleted;
        
        public event System.EventHandler<getWeatherCompletedEventArgs> getWeatherCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MyNotebookCustomControls.Weather.WeatherWSSoap.BegingetRegionDataset(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetRegionDataset(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MyNotebookCustomControls.Weather.ArrayOfXElement MyNotebookCustomControls.Weather.WeatherWSSoap.EndgetRegionDataset(System.IAsyncResult result) {
            return base.Channel.EndgetRegionDataset(result);
        }
        
        private System.IAsyncResult OnBegingetRegionDataset(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((MyNotebookCustomControls.Weather.WeatherWSSoap)(this)).BegingetRegionDataset(callback, asyncState);
        }
        
        private object[] OnEndgetRegionDataset(System.IAsyncResult result) {
            MyNotebookCustomControls.Weather.ArrayOfXElement retVal = ((MyNotebookCustomControls.Weather.WeatherWSSoap)(this)).EndgetRegionDataset(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetRegionDatasetCompleted(object state) {
            if ((this.getRegionDatasetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getRegionDatasetCompleted(this, new getRegionDatasetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getRegionDatasetAsync() {
            this.getRegionDatasetAsync(null);
        }
        
        public void getRegionDatasetAsync(object userState) {
            if ((this.onBegingetRegionDatasetDelegate == null)) {
                this.onBegingetRegionDatasetDelegate = new BeginOperationDelegate(this.OnBegingetRegionDataset);
            }
            if ((this.onEndgetRegionDatasetDelegate == null)) {
                this.onEndgetRegionDatasetDelegate = new EndOperationDelegate(this.OnEndgetRegionDataset);
            }
            if ((this.ongetRegionDatasetCompletedDelegate == null)) {
                this.ongetRegionDatasetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetRegionDatasetCompleted);
            }
            base.InvokeAsync(this.onBegingetRegionDatasetDelegate, null, this.onEndgetRegionDatasetDelegate, this.ongetRegionDatasetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MyNotebookCustomControls.Weather.WeatherWSSoap.BegingetRegionProvince(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetRegionProvince(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string[] MyNotebookCustomControls.Weather.WeatherWSSoap.EndgetRegionProvince(System.IAsyncResult result) {
            return base.Channel.EndgetRegionProvince(result);
        }
        
        private System.IAsyncResult OnBegingetRegionProvince(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((MyNotebookCustomControls.Weather.WeatherWSSoap)(this)).BegingetRegionProvince(callback, asyncState);
        }
        
        private object[] OnEndgetRegionProvince(System.IAsyncResult result) {
            string[] retVal = ((MyNotebookCustomControls.Weather.WeatherWSSoap)(this)).EndgetRegionProvince(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetRegionProvinceCompleted(object state) {
            if ((this.getRegionProvinceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getRegionProvinceCompleted(this, new getRegionProvinceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getRegionProvinceAsync() {
            this.getRegionProvinceAsync(null);
        }
        
        public void getRegionProvinceAsync(object userState) {
            if ((this.onBegingetRegionProvinceDelegate == null)) {
                this.onBegingetRegionProvinceDelegate = new BeginOperationDelegate(this.OnBegingetRegionProvince);
            }
            if ((this.onEndgetRegionProvinceDelegate == null)) {
                this.onEndgetRegionProvinceDelegate = new EndOperationDelegate(this.OnEndgetRegionProvince);
            }
            if ((this.ongetRegionProvinceCompletedDelegate == null)) {
                this.ongetRegionProvinceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetRegionProvinceCompleted);
            }
            base.InvokeAsync(this.onBegingetRegionProvinceDelegate, null, this.onEndgetRegionProvinceDelegate, this.ongetRegionProvinceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MyNotebookCustomControls.Weather.WeatherWSSoap.BegingetRegionCountry(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetRegionCountry(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string[] MyNotebookCustomControls.Weather.WeatherWSSoap.EndgetRegionCountry(System.IAsyncResult result) {
            return base.Channel.EndgetRegionCountry(result);
        }
        
        private System.IAsyncResult OnBegingetRegionCountry(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((MyNotebookCustomControls.Weather.WeatherWSSoap)(this)).BegingetRegionCountry(callback, asyncState);
        }
        
        private object[] OnEndgetRegionCountry(System.IAsyncResult result) {
            string[] retVal = ((MyNotebookCustomControls.Weather.WeatherWSSoap)(this)).EndgetRegionCountry(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetRegionCountryCompleted(object state) {
            if ((this.getRegionCountryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getRegionCountryCompleted(this, new getRegionCountryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getRegionCountryAsync() {
            this.getRegionCountryAsync(null);
        }
        
        public void getRegionCountryAsync(object userState) {
            if ((this.onBegingetRegionCountryDelegate == null)) {
                this.onBegingetRegionCountryDelegate = new BeginOperationDelegate(this.OnBegingetRegionCountry);
            }
            if ((this.onEndgetRegionCountryDelegate == null)) {
                this.onEndgetRegionCountryDelegate = new EndOperationDelegate(this.OnEndgetRegionCountry);
            }
            if ((this.ongetRegionCountryCompletedDelegate == null)) {
                this.ongetRegionCountryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetRegionCountryCompleted);
            }
            base.InvokeAsync(this.onBegingetRegionCountryDelegate, null, this.onEndgetRegionCountryDelegate, this.ongetRegionCountryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MyNotebookCustomControls.Weather.WeatherWSSoap.BegingetSupportCityDataset(string theRegionCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetSupportCityDataset(theRegionCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MyNotebookCustomControls.Weather.ArrayOfXElement MyNotebookCustomControls.Weather.WeatherWSSoap.EndgetSupportCityDataset(System.IAsyncResult result) {
            return base.Channel.EndgetSupportCityDataset(result);
        }
        
        private System.IAsyncResult OnBegingetSupportCityDataset(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string theRegionCode = ((string)(inValues[0]));
            return ((MyNotebookCustomControls.Weather.WeatherWSSoap)(this)).BegingetSupportCityDataset(theRegionCode, callback, asyncState);
        }
        
        private object[] OnEndgetSupportCityDataset(System.IAsyncResult result) {
            MyNotebookCustomControls.Weather.ArrayOfXElement retVal = ((MyNotebookCustomControls.Weather.WeatherWSSoap)(this)).EndgetSupportCityDataset(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetSupportCityDatasetCompleted(object state) {
            if ((this.getSupportCityDatasetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getSupportCityDatasetCompleted(this, new getSupportCityDatasetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getSupportCityDatasetAsync(string theRegionCode) {
            this.getSupportCityDatasetAsync(theRegionCode, null);
        }
        
        public void getSupportCityDatasetAsync(string theRegionCode, object userState) {
            if ((this.onBegingetSupportCityDatasetDelegate == null)) {
                this.onBegingetSupportCityDatasetDelegate = new BeginOperationDelegate(this.OnBegingetSupportCityDataset);
            }
            if ((this.onEndgetSupportCityDatasetDelegate == null)) {
                this.onEndgetSupportCityDatasetDelegate = new EndOperationDelegate(this.OnEndgetSupportCityDataset);
            }
            if ((this.ongetSupportCityDatasetCompletedDelegate == null)) {
                this.ongetSupportCityDatasetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetSupportCityDatasetCompleted);
            }
            base.InvokeAsync(this.onBegingetSupportCityDatasetDelegate, new object[] {
                        theRegionCode}, this.onEndgetSupportCityDatasetDelegate, this.ongetSupportCityDatasetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MyNotebookCustomControls.Weather.WeatherWSSoap.BegingetSupportCityString(string theRegionCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetSupportCityString(theRegionCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string[] MyNotebookCustomControls.Weather.WeatherWSSoap.EndgetSupportCityString(System.IAsyncResult result) {
            return base.Channel.EndgetSupportCityString(result);
        }
        
        private System.IAsyncResult OnBegingetSupportCityString(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string theRegionCode = ((string)(inValues[0]));
            return ((MyNotebookCustomControls.Weather.WeatherWSSoap)(this)).BegingetSupportCityString(theRegionCode, callback, asyncState);
        }
        
        private object[] OnEndgetSupportCityString(System.IAsyncResult result) {
            string[] retVal = ((MyNotebookCustomControls.Weather.WeatherWSSoap)(this)).EndgetSupportCityString(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetSupportCityStringCompleted(object state) {
            if ((this.getSupportCityStringCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getSupportCityStringCompleted(this, new getSupportCityStringCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getSupportCityStringAsync(string theRegionCode) {
            this.getSupportCityStringAsync(theRegionCode, null);
        }
        
        public void getSupportCityStringAsync(string theRegionCode, object userState) {
            if ((this.onBegingetSupportCityStringDelegate == null)) {
                this.onBegingetSupportCityStringDelegate = new BeginOperationDelegate(this.OnBegingetSupportCityString);
            }
            if ((this.onEndgetSupportCityStringDelegate == null)) {
                this.onEndgetSupportCityStringDelegate = new EndOperationDelegate(this.OnEndgetSupportCityString);
            }
            if ((this.ongetSupportCityStringCompletedDelegate == null)) {
                this.ongetSupportCityStringCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetSupportCityStringCompleted);
            }
            base.InvokeAsync(this.onBegingetSupportCityStringDelegate, new object[] {
                        theRegionCode}, this.onEndgetSupportCityStringDelegate, this.ongetSupportCityStringCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MyNotebookCustomControls.Weather.WeatherWSSoap.BegingetWeather(string theCityCode, string theUserID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetWeather(theCityCode, theUserID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string[] MyNotebookCustomControls.Weather.WeatherWSSoap.EndgetWeather(System.IAsyncResult result) {
            return base.Channel.EndgetWeather(result);
        }
        
        private System.IAsyncResult OnBegingetWeather(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string theCityCode = ((string)(inValues[0]));
            string theUserID = ((string)(inValues[1]));
            return ((MyNotebookCustomControls.Weather.WeatherWSSoap)(this)).BegingetWeather(theCityCode, theUserID, callback, asyncState);
        }
        
        private object[] OnEndgetWeather(System.IAsyncResult result) {
            string[] retVal = ((MyNotebookCustomControls.Weather.WeatherWSSoap)(this)).EndgetWeather(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetWeatherCompleted(object state) {
            if ((this.getWeatherCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getWeatherCompleted(this, new getWeatherCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getWeatherAsync(string theCityCode, string theUserID) {
            this.getWeatherAsync(theCityCode, theUserID, null);
        }
        
        public void getWeatherAsync(string theCityCode, string theUserID, object userState) {
            if ((this.onBegingetWeatherDelegate == null)) {
                this.onBegingetWeatherDelegate = new BeginOperationDelegate(this.OnBegingetWeather);
            }
            if ((this.onEndgetWeatherDelegate == null)) {
                this.onEndgetWeatherDelegate = new EndOperationDelegate(this.OnEndgetWeather);
            }
            if ((this.ongetWeatherCompletedDelegate == null)) {
                this.ongetWeatherCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetWeatherCompleted);
            }
            base.InvokeAsync(this.onBegingetWeatherDelegate, new object[] {
                        theCityCode,
                        theUserID}, this.onEndgetWeatherDelegate, this.ongetWeatherCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override MyNotebookCustomControls.Weather.WeatherWSSoap CreateChannel() {
            return new WeatherWSSoapClientChannel(this);
        }
        
        private class WeatherWSSoapClientChannel : ChannelBase<MyNotebookCustomControls.Weather.WeatherWSSoap>, MyNotebookCustomControls.Weather.WeatherWSSoap {
            
            public WeatherWSSoapClientChannel(System.ServiceModel.ClientBase<MyNotebookCustomControls.Weather.WeatherWSSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BegingetRegionDataset(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("getRegionDataset", _args, callback, asyncState);
                return _result;
            }
            
            public MyNotebookCustomControls.Weather.ArrayOfXElement EndgetRegionDataset(System.IAsyncResult result) {
                object[] _args = new object[0];
                MyNotebookCustomControls.Weather.ArrayOfXElement _result = ((MyNotebookCustomControls.Weather.ArrayOfXElement)(base.EndInvoke("getRegionDataset", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetRegionProvince(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("getRegionProvince", _args, callback, asyncState);
                return _result;
            }
            
            public string[] EndgetRegionProvince(System.IAsyncResult result) {
                object[] _args = new object[0];
                string[] _result = ((string[])(base.EndInvoke("getRegionProvince", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetRegionCountry(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("getRegionCountry", _args, callback, asyncState);
                return _result;
            }
            
            public string[] EndgetRegionCountry(System.IAsyncResult result) {
                object[] _args = new object[0];
                string[] _result = ((string[])(base.EndInvoke("getRegionCountry", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetSupportCityDataset(string theRegionCode, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = theRegionCode;
                System.IAsyncResult _result = base.BeginInvoke("getSupportCityDataset", _args, callback, asyncState);
                return _result;
            }
            
            public MyNotebookCustomControls.Weather.ArrayOfXElement EndgetSupportCityDataset(System.IAsyncResult result) {
                object[] _args = new object[0];
                MyNotebookCustomControls.Weather.ArrayOfXElement _result = ((MyNotebookCustomControls.Weather.ArrayOfXElement)(base.EndInvoke("getSupportCityDataset", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetSupportCityString(string theRegionCode, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = theRegionCode;
                System.IAsyncResult _result = base.BeginInvoke("getSupportCityString", _args, callback, asyncState);
                return _result;
            }
            
            public string[] EndgetSupportCityString(System.IAsyncResult result) {
                object[] _args = new object[0];
                string[] _result = ((string[])(base.EndInvoke("getSupportCityString", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetWeather(string theCityCode, string theUserID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = theCityCode;
                _args[1] = theUserID;
                System.IAsyncResult _result = base.BeginInvoke("getWeather", _args, callback, asyncState);
                return _result;
            }
            
            public string[] EndgetWeather(System.IAsyncResult result) {
                object[] _args = new object[0];
                string[] _result = ((string[])(base.EndInvoke("getWeather", _args, result)));
                return _result;
            }
        }
    }
    
    [System.Xml.Serialization.XmlSchemaProviderAttribute(null, IsAny=true)]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Silverlight.Phone.ServiceReference", "3.7.0.0")]
    public partial class ArrayOfXElement : object, System.Xml.Serialization.IXmlSerializable {
        
        private System.Collections.Generic.List<System.Xml.Linq.XElement> nodesList = new System.Collections.Generic.List<System.Xml.Linq.XElement>();
        
        public ArrayOfXElement() {
        }
        
        public virtual System.Collections.Generic.List<System.Xml.Linq.XElement> Nodes {
            get {
                return this.nodesList;
            }
        }
        
        public virtual System.Xml.Schema.XmlSchema GetSchema() {
            throw new System.NotImplementedException();
        }
        
        public virtual void WriteXml(System.Xml.XmlWriter writer) {
            System.Collections.Generic.IEnumerator<System.Xml.Linq.XElement> e = nodesList.GetEnumerator();
            for (
            ; e.MoveNext(); 
            ) {
                ((System.Xml.Serialization.IXmlSerializable)(e.Current)).WriteXml(writer);
            }
        }
        
        public virtual void ReadXml(System.Xml.XmlReader reader) {
            for (
            ; (reader.NodeType != System.Xml.XmlNodeType.EndElement); 
            ) {
                if ((reader.NodeType == System.Xml.XmlNodeType.Element)) {
                    System.Xml.Linq.XElement elem = new System.Xml.Linq.XElement("default");
                    ((System.Xml.Serialization.IXmlSerializable)(elem)).ReadXml(reader);
                    Nodes.Add(elem);
                }
                else {
                    reader.Skip();
                }
            }
        }
    }
}
